openapi: 3.0.0
info:
  title: WallOfLove API
  description: 表白墙系统API文档
  version: 1.0.0
servers:
  - url: http://localhost:8080
    description: 本地开发环境

paths:
  /api/posts:
    post:
      tags:
        - 帖子管理
      summary: 创建帖子
      description: 创建一个新的表白帖子
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Post'
      responses:
        '200':
          description: 创建成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Post'
        '400':
          description: 参数错误
        '500':
          description: 服务器错误

    get:
      tags:
        - 帖子管理
      summary: 获取可见帖子
      description: 获取未被拉黑的其他人发布的表白
      responses:
        '200':
          description: 获取成功
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Post'
        '500':
          description: 服务器错误

  /api/posts/{id}:
    put:
      tags:
        - 帖子管理
      summary: 更新帖子
      description: 更新指定ID的帖子内容
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Post'
      responses:
        '200':
          description: 更新成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Post'
        '400':
          description: 参数错误
        '404':
          description: 帖子不存在
        '500':
          description: 服务器错误

    delete:
      tags:
        - 帖子管理
      summary: 删除帖子
      description: 删除指定ID的帖子
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: 删除成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "删除成功"
        '400':
          description: 无效的帖子ID
        '404':
          description: 帖子不存在
        '500':
          description: 服务器错误

  /api/images:
    post:
      tags:
        - 图片管理
      summary: 上传图片
      description: 上传图片并关联到帖子或用户头像
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
                user_id:
                  type: integer
                post_id:
                  type: integer
                is_avatar:
                  type: boolean
      responses:
        '200':
          description: 上传成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Image'
        '400':
          description: 参数错误
        '500':
          description: 服务器错误

  /api/profile:
    put:
      tags:
        - 用户管理
      summary: 更新个人资料
      description: 更新用户个人资料信息
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateProfile'
      responses:
        '200':
          description: 更新成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  version:
                    type: integer
        '400':
          description: 参数错误
        '500':
          description: 服务器错误

components:
  schemas:
    Post:
      type: object
      properties:
        id:
          type: integer
          description: 帖子ID
        user_id:
          type: integer
          description: 用户ID
        content:
          type: string
          description: 帖子内容
        anonymous:
          type: boolean
          description: 是否匿名
        visibility:
          type: string
          enum: [public, private]
          description: 可见性
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
      required:
        - user_id
        - content

    Image:
      type: object
      properties:
        id:
          type: integer
        user_id:
          type: integer
        post_id:
          type: integer
        is_avatar:
          type: boolean
        url:
          type: string
        created_at:
          type: string
          format: date-time

    UpdateProfile:
      type: object
      properties:
        nickname:
          type: string
        original_password:
          type: string
        password:
          type: string
        avatar_id:
          type: integer
      required:
        - original_password